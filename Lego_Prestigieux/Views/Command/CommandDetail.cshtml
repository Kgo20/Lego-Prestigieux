@using Microsoft.Extensions.Options
@model Lego_Prestigieux.Models.CompleteCommand

@inject IOptions<StripeOptions> StripeOptions

@{
    ViewData["Title"] = "CommandDetail";
}

<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            <h1>Détail de la commande</h1>
            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            Numéro de command
                        </th>
                        <th>
                            Date de création
                        </th>
                        <th>
                            Date de livraison prévu
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => Model.CommandId)-0000GTL
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.CommandCreationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.ExpectedDeliveryDate)
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            Prénom
                        </th>
                        <th>
                            Nom
                        </th>
                        <th>
                            Courriel
                        </th>
                        <th>
                            Téléphone
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => Model.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.EMail)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.PhoneNumber)
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            Adresse
                        </th>
                        <th>
                            Ville
                        </th>
                        <th>
                            Province
                        </th>
                        <th>
                            Pays
                        </th>
                        <th>
                            Code postal
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => Model.AddressLivraison.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.AddressLivraison.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.AddressLivraison.Province)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.AddressLivraison.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.AddressLivraison.PostalCode)
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>Produits</th>
                        <th>Prix</th>
                        <th>Quantité</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <td class="align-middle"><img src="@item.URL" alt="" style="width: 50px;">@item.Name</td>
                            <td class="align-middle">$@item.Price.ToString("0.00")</td>
                            <td class="align-middle">
                                <div class="input-group quantity mx-auto" style="width: 100px;">
                                    <input readonly="readonly" class="form-control form-control-sm bg-secondary border-0 text-center" asp-for="@item.Quantity">
                                </div>
                            </td>
                            <td class="align-middle">$@item.Total.ToString("0.00")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Résumé du panier</span></h5>
            <div class="bg-light p-30 mb-5">
                <div class="border-bottom pb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <h6>Sous-total</h6>
                        <h6>@Model.TotalBeforeTaxes.ToString("0.00")$</h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Taxes</h6>
                        <h6 class="font-weight-medium">@Model.Taxes.ToString("0.00")$</h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Frais de livraison</h6>
                        <h6 class="font-weight-medium">@Model.ShippingCost.ToString("0.00")$</h6>
                    </div>
                </div>
                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Total</h5>
                        <h5>@Model.Total.ToString("0.00")$</h5>
                    </div>

                    @*<a asp-action="ChangeStatus" asp-controller="Command" asp-route-commandid="@Model.CommandId" class="btn btn-block btn-primary font-weight-bold my-3 py-3">
                        Confirmer la commande
                        </a>*@

                    @if (@Model.CommandStatus == CommandStatus.Confirmed)
                    {
                        <form method="post">
                            <div class="row">
                                <div class="col">
                                    <div class="float-right">
                                        <button id="payment-request-button" class="btn btn-primary" type="button" href="#payment-form">Payer</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<section id="payment-section" class="modal fade rounded" role="dialog">
    <form id="payment-form" class="modal-dialog modal-content bg-light" method="post" accept-charset="UTF-8">

        <div class="modal-header">
            <h4 class="modal-title">Payment Informations</h4>
        </div>

        <div class="modal-body">
            <div class="form-row mb-2">
                <div class="col">
                    <label for="name" class="control-label">Name</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-user"></i></span>
                        </div>
                        <input id="name" name="name" class="form-control border-left-0" type="text" placeholder="Nom" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="phone" class="control-label">Phone</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-phone"></i></span>
                        </div>
                        <input id="phone" name="phone" class="form-control border-left-0" type="text" placeholder="Phone number" required pattern="^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$">
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="address" class="control-label">Address</label>
                    <div class="input-group">
                        <input id="address" name="address" class="form-control border-left-0" type="text" placeholder="Address" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="city" class="control-label">City</label>
                    <div class="input-group">
                        <input id="city" name="city" class="form-control border-left-0" type="text" placeholder="City" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="province" class="control-label">Province</label>
                    <div class="input-group">
                        <input id="province" name="province" class="form-control border-left-0" type="text" placeholder="Province" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="country" class="control-label">Country</label>
                    <div class="input-group">
                        <input id="country" name="country" class="form-control border-left-0" type="text" placeholder="Country" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="postalcode" class="control-label">Postal Code</label>
                    <div class="input-group">
                        <input id="postalcode" name="postalcode" class="form-control border-left-0" type="text" placeholder="Postal Code" required pattern="^(?!.*[DFIOQU])[A-VXY][0-9][A-Z] ?[0-9][A-Z][0-9]$">
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="card" class="control-label">Card</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-credit-card"></i></span>
                        </div>
                        <div id="card" class="form-control border-left-0"></div>
                    </div>
                    <div id="card-errors" role="alert"></div>
                </div>
            </div>


            <div class="modal-footer row">
                <div class="float-right">
                    <button id="cancel-btn" type="button" class="btn btn-outline-danger">Cancel</button>
                    <button id="reset-btn" type="reset" class="btn btn-outline-secondary">Reset</button>
                    <button id="submit-btn" type="submit" class="btn btn-success">Confirm</button>
                </div>
            </div>
        </div>
    </form>
</section>

@section scripts {
<script src="https://js.stripe.com/v3/"></script>

<script>
    (function () {
        "use strict";

        $(document).ready(function () {
            $("#payment-request-button").on("click", function () {
                $("#payment-section").modal({
                    backdrop: 'static'
                });

                $("#cancel-btn").on("click", function () {
                    $("#payment-section").modal("hide");
                });
            });

            let stripe = Stripe("@StripeOptions.Value.PublicKey");
            let elements = stripe.elements();

            let card = elements.create("card", {
                style: {
                    base: {
                        fontSize: "16px",
                        fontWeight: "400",
                        color: "#495057",
                    }
                },
                hideIcon: true,
                hidePostalCode: true
            });

            card.mount("#card");

            card.addEventListener('change', function (event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                } else {
                    displayError.textContent = '';
                }
            });

            let name = "";
            let phone = "";
            let address = "";
            let city = "";
            let province = "";
            let country = "";
            let postalcode = "";

            // Create a token or display an error when the form is submitted.
            var form = $("#payment-form");
            form.on('submit', function (e) {
                e.preventDefault();
                const form = document.getElementById('payment-form');
                const formData = new FormData(form);

               name = formData.get('name');
               phone = formData.get('phone');
               address = formData.get('address');
               city = formData.get('city');
               province = formData.get('province');
               country = formData.get('country');
               postalcode = formData.get('postalcode');

                stripe.createToken(card).then(function (result) {
                    if (result.error) {
                        $("#card-errors").textContent = result.error.message;
                    } else {
                        // Send the token to your server.
                        stripeTokenHandler(result.token);
                    }
                });
            });

            function stripeTokenHandler(token) {
                fetch('/Command/Charges', {
                    method: 'post',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify({
                        Token: token.id,
                        Description: "@Model.CommandId",
                        AmountInCents: @((long)Model.Total * 100), // Price in cents
                        CurrencyCode: "cad"
                    })
                    // Report to the browser that the payment was successful or failed.
                }).then(function (response) {
                    if (response.ok) {
                      $.ajax({
                            url: 'CreateBilling/',
                            data: {
                                Name: name,
                                PhoneNumber: phone,
                                Address: address,
                                City: city,
                                Province: province,
                                Country: country,
                                PostalCode: postalcode,
                                LastNumber: token.card.last4,
                                CommandId: @Model.CommandId },
                            success: function () {
                                window.location.replace("@Url.Action("Confirmation")");
                            }})
                    } else {
                        e.complete('fail');
                    }
                });
            }
        });
    })();
</script>
}


